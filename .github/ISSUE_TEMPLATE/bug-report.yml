name: Bug Report
description: Create a bug report to help us improve
labels: ["BUG", "DOCUMENTATION"]
body:
  - type: markdown
    attributes:
      value: |
        Thanks for taking the time to fill out this bug report!

  - type: dropdown
    id: team
    attributes:
      label: Team
      description: which team is responsible?
      options:
        - Refapp
        - Other
    validations:
      required: true

  - type: dropdown
    id: landscape
    attributes:
      label: Landscape
      description: which lanscape?
      options:
        - Factory
        - Canary
    validations:
      required: true

  - type: dropdown
    id: issue
    attributes:
      label: Issue
      description: where is the issue?
      options:
        - Bug
        - Documentation
    validations:
      required: true
        
  - type: dropdown
    id: topic
    attributes:
      label: Topic
      description: What scenario are you running?
      options:
        - Mission
        - Golden Path
        - Others
    validations:
      required: true

  - type: dropdown
    id: impact
    attributes:
      label: Impact
      description: Who is getting impacted?
      options:
        - Internal
        - External
        - Both
    validations:
      required: true

  - type: textarea
    id: what-happened
    attributes:
      label: What happened?
      description: Also, what did you expect to happen?
      placeholder: |
        When executing this code:
        ```js/java
        ...
        ```
        we get this error: `RuntimeError: <message>`.
        
        if there is documentation issue, describe the expected behavour and attach snapshot.
    validations:
      required: true

  - type: textarea
    id: where-happened
    attributes:
      label: Where is the issue?
      description: Attach the link, so that we can directly jumo there.
    validations:
      required: true

  - type: textarea
    id: reproduce
    attributes:
      label: Steps to reproduce
      description: If possible, provide a minimal reproducible sample.
      placeholder: |
        cds init bookshop --add tiny-sample
        cd bookshop
        cds watch
        POST http://localhost:4004/odata/v4/catalog/Books { "some": "data" }
        BOOM!
    validations:
      required: false
  - type: textarea
    id: versions
    attributes:
      label: Versions
      description: |
        Run `cds v -i` in your project and copy the output here. 
        Also include a link to the branch in your GitHub repo.
    validations:
      required: false
  - type: textarea
    id: logs
    attributes:
      label: Relevant log output
      description: |
        To simplify analysis, activate relevant `DEBUG` channels before gathering logs. → [Node.js](https://cap.cloud.sap/docs/node.js/cds-log#cds-log-modules) → [Java](https://pages.github.tools.sap/cap/docs/java/observability#predefined-loggers)
        
        Please copy and paste any relevant log output. This will be automatically formatted into code, so no need for backticks.
      render: shell
